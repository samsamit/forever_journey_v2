type User @secret(field: "password") {
  username: String! @id
  email: String!
  characters: [Character] @hasInverse(field: owner)
  parties: [party] @hasInverse(field: owner)
  role: UserRole! @search
}

type party {
  name: String! @id
  owner: String!
  characters: [Character]
}

enum UserRole {
  USER
  ADMIN
}

# Dgraph.Authorization {"VerificationKey":"YourSecretKey","Header":"auth","Namespace":"https://localhost:8080/jwt/claims","Algo":"HS256"}
